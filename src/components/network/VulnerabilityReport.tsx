'use client';

import {
  ExclamationTriangleIcon,
  ShieldExclamationIcon,
  InformationCircleIcon,
} from '@heroicons/react/24/outline';

interface Vulnerability {
  id: string;
  title: string;
  description: string;
  severity: 'critical' | 'high' | 'medium' | 'low' | 'info';
  status: 'open' | 'fixed' | 'in_progress';
  affectedHosts: string[];
  discoveredAt: Date;
}

interface VulnerabilityReportProps {
  vulnerabilities: Vulnerability[];
}

export default function VulnerabilityReport({
  vulnerabilities = [],
}: VulnerabilityReportProps) {
  const getSeverityDetails = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical':
        return {
          icon: <ExclamationTriangleIcon className="h-5 w-5" />,
          color: 'text-red-500 bg-red-500/10',
          label: 'Critical',
        };
      case 'high':
        return {
          icon: <ShieldExclamationIcon className="h-5 w-5" />,
          color: 'text-orange-500 bg-orange-500/10',
          label: 'High',
        };
      case 'medium':
        return {
          icon: <ShieldExclamationIcon className="h-5 w-5" />,
          color: 'text-yellow-500 bg-yellow-500/10',
          label: 'Medium',
        };
      case 'low':
        return {
          icon: <InformationCircleIcon className="h-5 w-5" />,
          color: 'text-blue-500 bg-blue-500/10',
          label: 'Low',
        };
      default:
        return {
          icon: <InformationCircleIcon className="h-5 w-5" />,
          color: 'text-gray-500 bg-gray-500/10',
          label: 'Info',
        };
    }
  };

  const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
      case 'fixed':
        return 'text-green-500 bg-green-500/10';
      case 'in_progress':
        return 'text-yellow-500 bg-yellow-500/10';
      default:
        return 'text-red-500 bg-red-500/10';
    }
  };

  const formatDate = (date: Date) => {
    return new Date(date).toLocaleString();
  };

  return (
    <div className="bg-gray-800 rounded-lg p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-lg font-semibold text-white">Vulnerability Report</h2>
        <div className="flex space-x-2">
          <button className="px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors">
            Export Report
          </button>
        </div>
      </div>

      {vulnerabilities.length > 0 ? (
        <div className="space-y-4">
          {vulnerabilities.map((vuln) => {
            const severityDetails = getSeverityDetails(vuln.severity);
            return (
              <div
                key={vuln.id}
                className="p-4 bg-gray-700 rounded-lg space-y-3"
              >
                <div className="flex items-start justify-between">
                  <div className="flex items-start space-x-3">
                    <div
                      className={`p-2 rounded-full ${severityDetails.color}`}
                    >
                      {severityDetails.icon}
                    </div>
                    <div>
                      <h3 className="text-sm font-medium text-white">
                        {vuln.title}
                      </h3>
                      <p className="text-xs text-gray-400 mt-1">
                        {vuln.description}
                      </p>
                    </div>
                  </div>
                  <span
                    className={`px-2 py-1 text-xs rounded-full ${getStatusColor(
                      vuln.status
                    )}`}
                  >
                    {vuln.status.replace('_', ' ')}
                  </span>
                </div>

                <div className="pl-10">
                  <div className="text-xs text-gray-400">
                    <p>Affected Hosts: {vuln.affectedHosts.join(', ')}</p>
                    <p className="mt-1">
                      Discovered: {formatDate(vuln.discoveredAt)}
                    </p>
                  </div>
                </div>

                <div className="pl-10 pt-2">
                  <button className="text-sm text-blue-500 hover:text-blue-400">
                    View Details
                  </button>
                </div>
              </div>
            );
          })}
        </div>
      ) : (
        <div className="text-center py-6">
          <p className="text-gray-400">No vulnerabilities found</p>
        </div>
      )}

      {vulnerabilities.length > 0 && (
        <div className="mt-6 flex justify-between items-center">
          <div className="flex space-x-4">
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 rounded-full bg-red-500"></div>
              <span className="text-xs text-gray-400">Critical/High</span>
            </div>
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
              <span className="text-xs text-gray-400">Medium</span>
            </div>
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 rounded-full bg-blue-500"></div>
              <span className="text-xs text-gray-400">Low/Info</span>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 